№ Переменные и типы данных
№ Вывод данных
! Функция console.log() выводит переданные в нее значения в консоль браузера или на экран терминала (в случае NodeJS).
@
console.log('Hello world!'); 
@
@
> Hello world!
@
! Значения могут быть перечислены через запятую:
@
console.log('Apple', 'Orange', 'Grape');
console.log(1, 2, 3);
@
@
> Apple Orange Grape
> 1 2 3
@
№ Что такое переменная?
! Переменная в программировании - это именованный контейнер для некоторого значения.
! Представьте себе ящик с наклееным на него стикером. Вы кладете что-нибудь в ящик и пишете на стикере короткое имя без пробелов и знаков препинания, начинающееся с буквы английского алфавита, примерно так же работает переменная в программировании.
! В JavaScript для создания переменной используется модификатор (специальное слово для объявления имени переменной).
! Существует три модификатора:
! var
! let
! const
! Модификатор const создает неизменяемую переменную, а модификаторы let и var - изменяемую.
! Модификатор var признан устаревшим и не рекомендуется к использованию.
@
let name = 'Maxim'; 
console.log('Hello, ' + name);
<br>
name = 'Ivan';
console.log('Hello, ' + name);
@
@
> Hello, Maxim
> Hello, Ivan
@
@
const name = 'John';
<br>
// Будет ошибка!
// name = 'Ivan'; 
@
№ Типы данных
! Значение в JavaScript всегда относится к данным определённого типа. Например, это может быть строка или число.
! В JavaScript есть 8 типов данных: 
! number - целые и дробные числа
! string - текстовая информация (пишется в кавычках)
! boolean - true или false
! object - ссылочный тип данных
! undefined - отсутствие значения по умолчанию
! null - отсутствие значения, которое установил пользователь
! symbol - создает уникальный идентификатор (нужен для объектов)
! BigInt - ооочень большие числа
@
let counter = 10;
console.log(counter, <span class='blue'>typeof</span>counter);
<br>
let name = 'Maxim';
console.log(name, <span class='blue'>typeof</span>name);
<br> 
let isActive = true;
console.log(isActive, <span class='blue'>typeof</span>isActive);
@
@
> 10 number
> Maxim string
> true boolean
@
@
let novalue;
console.log(novalue, <span class='blue'>typeof</span>novalue);
@
@
> undefined undefined
@
№ Тип данных number
! Числовой тип данных (number) - это целочисленные и числа с плавающей точкой.
! К числам мы можем применять различные математические операции, такие как умножение *, деление /, сложение +, вычитание - и так далее.
! Кроме обычных чисел, существуют так называемые «специальные числовые значения», которые относятся к этому типу данных: Infinity, -Infinity и NaN. Мы можем получить такие значения, например, при делении на ноль:
@
console.log(1 / 0);
@
@
> Infinity
@
! NaN или Not a Number (не число) означает вычислительную ошибку, например:
@
console.log('hello' / 2);
@
@
> NaN
@
! Функция parseInt() делает значение целочисленным (без дробной части).
@
let a = '123';
console.log(a, <span class='blue'>typeof</span>a);
<br>
let b = parseInt(a);
console.log(b, <span class='blue'>typeof</span>b);
@
! Тип данных string
! Строка (string) в JavaScript должна быть заключена в кавычки.
! В JavaScript существует три типа кавычек: 
! Двойные кавычки: "Привет"
! Одинарные кавычки: 'Привет'
! Обратные кавычки: `Привет`
! Двойные или одинарные кавычки являются «простыми», между ними нет разницы в JavaScript.
! Обратные кавычки же имеют «расширенный функционал». Они позволяют нам встраивать выражения в строку, заключая их в ${…}. Например:
@
let name = "Петя"; 
console.log(`Привет, ${name}!`); 
@
@
> Привет, Петя
@
! Тип данных boolean
! Булевый тип (boolean) может принимать только два значения: true (истина) и false (ложь).
! Такой тип, как правило, используется для хранения значений да/нет: true значит «да, правильно», а false значит «нет, не правильно».
@
let isReady = false; 
console.log(isReady, <span class='blue'>typeof</span>isReady);
@
@
> false boolean
@
! Булевые значения также могут быть результатом сравнений:
@
console.log(`10 > 5 : ${10 > 5}`);  
console.log(`10 < 5 : ${10 < 5}`); 
@
@
> 10 > 5 : true
> 10 < 5 : false
@
№ Решение задач
! 1. Выведите свою имя и фамилию в формате:
! Привет, Иван Иванов!
! 2. С помощью функции random() из класса Math можно сгенерировать случайное число.
@
let randomNumber = Math.random();
console.log(randomNumber); // -> случайное число от 0 до 1
@
@
let anotherNumber = parseInt( Math.random() * 10 );
console.log(anotherNumber); // -> случайное целое число от 0 до 10
@
! Выведите периметр прямоугольника со случайными значениями сторон (нужно сгенерировать два случайных числа).
! 3. Даны два случайных числа a и b. Найдите их среднее арифметическое: (a + b) / 2.
! 4. Функция prompt() выводит модальное окно с полем для ввода текста. 
@
let name = prompt('Введите свое имя');
alert(`Привет, ${name}!`);
@
! Пользователь вводит свое имя и возраст. Выведите всплывающее окно со строкой в формате 'Привет, Иван! Твой возраст - 24.'
! Пользователь вводит размер файла в байтах с помощью функции prompt(). Переведите введенные байты в мегабайты и выведите результат с помощью функции alert().
@
// Функция prompt() возвращает строковый тип данных.
// Для быстрого перевода в строки в число можно использовать унарный +.
let num = +'123';
console.log(num, <span class='blue'>typeof</span>num);
@
@
> 123 number
@
